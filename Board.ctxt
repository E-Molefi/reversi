#BlueJ class context
comment0.target=Board
comment0.text=\r\n\ A\ model\ of\ a\ playing\ board\ for\ a\ game\ of\ "Reversi".\r\n\r\n\ @author\ Emmanuel\ Molefi\r\n\ @version\ 10.05.2018\r\n
comment1.params=
comment1.target=Board()
comment1.text=\r\n\ Create\ a\ default\ Board\ with\ a\ default\ size\ of\ 8\ rows\ and\ 8\ columns.\r\n\ And\ initialise\ the\ necessary\ fields.\r\n
comment10.params=
comment10.target=boolean\ getIllegalMove()
comment10.text=\r\n\ @return\ Returns\ true\ if\ the\ player\ has\ made\ an\ illegal\ move.\r\n\ \ \ \ \ \ \ \ \ Returns\ false\ otherwise.\r\n
comment11.params=
comment11.target=boolean\ getChangingBoardSize()
comment11.text=\r\n\ @return\ Returns\ true\ if\ there\ is\ an\ attempt\ in\ changing\ the\ board.\r\n\ \ \ \ \ \ \ \ \ Returns\ false\ otherwise.\r\n
comment12.params=changingBoardSize
comment12.target=void\ setChangingBoardSize(boolean)
comment13.params=
comment13.target=javax.swing.ImageIcon\ getBlackPlayer()
comment13.text=\r\n\ @return\ The\ player\ who\ uses\ the\ black\ discs.\r\n
comment14.params=
comment14.target=javax.swing.ImageIcon\ getWhitePlayer()
comment14.text=\r\n\ @return\ The\ player\ who\ uses\ the\ white\ discs.\r\n
comment15.params=
comment15.target=int\ getTotalBlack()
comment15.text=\r\n\ @return\ The\ current\ total\ number\ of\ black\ discs\ on\ the\ board.\r\n
comment16.params=
comment16.target=int\ getTotalWhite()
comment16.text=\r\n\ @return\ The\ current\ total\ number\ of\ black\ discs\ on\ the\ board.\r\n
comment17.params=
comment17.target=boolean\ getGameOver()
comment17.text=\r\n\ @return\ Returns\ true\ if\ the\ game\ is\ over.\r\n\ \ \ \ \ \ \ \ \ Returns\ false\ otherwise.\r\n
comment18.params=
comment18.target=java.util.ArrayList\ getDiscsArray()
comment18.text=\r\n\ This\ is\ a\ helper\ method\ to\ enable\ us\ to\ get\ all\ the\ JButton\ components\ and\ add\ them\ to\ an\r\n\ ArrayList.\r\n\ \r\n\ @return\ The\ collection\ of\ JButtons.\r\n
comment19.params=
comment19.target=void\ move()
comment19.text=\r\n\ Specification\ for\ the\ move\ method.\r\n
comment2.params=boardSize
comment2.target=Board(int)
comment2.text=\r\n\ Create\ a\ Board\ with\ a\ specific\ size.\r\n
comment20.params=
comment20.target=void\ changeTurn()
comment20.text=\r\n\ This\ is\ a\ helper\ method\ to\ allow\ the\ players\ to\ change\ turns.\r\n
comment21.params=
comment21.target=boolean\ skipped()
comment21.text=\r\n\ @return\ Returns\ true\ if\ the\ player\ is\ skipped.\r\n\ \ \ \ \ \ \ \ \ Returns\ false\ otherwise.\r\n
comment22.params=
comment22.target=void\ resetSkipped()
comment22.text=\r\n\ Reset\ the\ state\ of\ the\ skipped\ player.\r\n
comment23.params=player\ verticalPosition\ horizontalPosition
comment23.target=void\ capture(javax.swing.ImageIcon,\ int,\ int)
comment23.text=\r\n\ Capture\ discs\ starting\ from\ the\ x\ and\ y\ position\ of\ the\ current\ element\r\n\ in\ the\ board.\r\n\ \r\n\ @param\r\n\ @param\r\n\ @param\r\n
comment24.params=player\ verticalPosition\ horizontalPosition
comment24.target=boolean\ isMoveLegal(javax.swing.ImageIcon,\ int,\ int)
comment24.text=\r\n\ This\ is\ to\ test\ if\ a\ move\ is\ legal.\r\n\ According\ to\ the\ rules\ of\ the\ game.\r\n\ \r\n\ If\ the\ move\ is\ not\ legal,\r\n\ show\ an\ appropriate\ message\ in\ the\ status\ bar.\r\n\ \r\n\ A\ move\ is\ legal\ if\ it\ would\ capture\ at\ least\ one\ piece,\r\n\ so\ this\ method\ should\ be\ similar\ to\ the\ capture\ method.\r\n\ \r\n\ @param\r\n\ @param\r\n\ @param\r\n
comment25.params=player\ x\ y
comment25.target=boolean\ canMove(javax.swing.ImageIcon,\ int,\ int)
comment25.text=\r\n\ Based\ on\ the\ isMoveLegal\ method,\r\n\ check\ if\ the\ current\ player\ can\ make\ a\ valid\ move.\r\n\ \r\n\ @param\ player\ The\ player\ whom\ to\ check\ if\ they\ can\ make\ a\ move.\r\n\ @param\ x\ \ \ \ \ \ The\ x\ component\ of\ the\ current\ position.\r\n\ @param\ y\ \ \ \ \ \ The\ y\ component\ of\ the\ current\ position.\r\n\ \r\n\ @return\ \ \ \ \ \ \ Returns\ true\ if\ the\ player\ can\ move.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Returns\ false\ otherwise.\r\n
comment26.params=player
comment26.target=int\ validMoves(javax.swing.ImageIcon)
comment26.text=\r\n\ @param\ player\ The\ player\ whom\ to\ count\ the\ valid\ moves\ for.\r\n\ @return\ \ \ \ \ \ \ The\ total\ number\ of\ moves\ available\ for\ a\ particular\ player.\r\n
comment27.params=player
comment27.target=void\ displayValidMoves(javax.swing.ImageIcon)
comment27.text=\r\n\ This\ is\ a\ helper\ method\ to\ give\ a\ player\ hints\ of\ their\ available\ valid\ moves.\r\n\ \r\n\ @param\ player\ The\ player\ whom\ to\ display\ their\ valid\ moves.\r\n
comment28.params=
comment28.target=void\ score()
comment28.text=\r\n\ This\ is\ a\ helper\ method\ to\ update\ the\ scores\ of\ the\ players.\r\n
comment29.params=
comment29.target=boolean\ fullBoard()
comment29.text=\r\n\ This\ is\ a\ helper\ method\ to\ check\ if\ the\ board\ is\ full.\r\n\ \r\n\ @return\ Returns\ true\ if\ the\ board\ is\ full.\r\n\ \ \ \ \ \ \ \ \ Returns\ false\ otherwise.\r\n
comment3.params=
comment3.target=void\ makeBoard()
comment3.text=\r\n\ Create\ a\ board\ panel\ and\ set\ the\ initial\ four\ pieces\ on\ it.\r\n
comment4.params=
comment4.target=int\ getBoardSize()
comment4.text=\r\n\ Return\ the\ current\ size\ of\ the\ board\ for\ the\ current\ game.\r\n\ @return\ The\ size\ of\ the\ current\ board.\r\n
comment5.params=boardSize
comment5.target=void\ setBoardSize(int)
comment5.text=\r\n\ @param\ boardSize\ The\ new\ board\ size.\r\n
comment6.params=
comment6.target=javax.swing.JPanel\ getBoardPanel()
comment6.text=\r\n\ Get\ the\ board\ panel.\r\n\ @return\ The\ board\ panel.\r\n
comment7.params=
comment7.target=javax.swing.ImageIcon\ getCurrentPlayer()
comment7.text=\r\n\ Get\ the\ current\ player.\r\n\ @return\ The\ current\ player.\r\n
comment8.params=currentPlayer
comment8.target=void\ setCurrentPlayer(javax.swing.ImageIcon)
comment8.text=\r\n\ @param\ currentPlayer\ The\ player\ to\ make\ the\ current\ move.\r\n
comment9.params=
comment9.target=javax.swing.ImageIcon\ getSkippedPlayer()
comment9.text=\r\n\ @return\ The\ player\ who\ has\ been\ currently\ skipped.\r\n
numComments=30
